<?php

/**
 * Implements hook_enable().
 * Create a field for use later
 */
function contextual_view_modes_install() {

}

/**
 * Implements hook_disable().
 */
function contextual_view_modes_disable() {
  drupal_set_message('contextual view modes has been disabled. '. l('Uninstall', 'admin/modules/uninstall') . ' module to remove all field data then disable and uninstall contextual view modes field module.');
}

/**
 * Implements hook_uninstall().
 */
function contextual_view_modes_uninstall() {

  $node_types = variable_get('cvm_global_content_type_modes', array());

  foreach ($node_types as $k => $v) {
    $instance = field_read_instance('node', CVM_FIELD_NAME, $k);
    field_delete_instance($instance, TRUE);
  }

  field_delete_field(CVM_FIELD_NAME);
  field_purge_batch(10);

}

/**
 * Implements hook_update().
 */
function contextual_view_modes_update_7101(&$sandbox) {
  db_update('system')
    ->fields(array(
      'weight' => 100,
      )
    )
    ->condition('name', 'contextual_view_modes')
    ->execute();;
}

/**
 * Implements hook_requirements().
 */
function contextual_view_modes_requirements($phase) {
  $requirements = array();

  /*
   *  // Ensure translations don't break at install time
   *  $t = get_t();
   *
   *  // Report Drupal version
   *  if ($phase == 'runtime') {
   *    $requirements['drupal'] = array(
   *      'title' => $t('Drupal'),
   *      'value' => VERSION,
   *      'severity' => REQUIREMENT_INFO
   *    );
   *  }
   *
   *  // Test PHP version
   *  $requirements['php'] = array(
   *    'title' => $t('PHP'),
   *    'value' => ($phase == 'runtime') ? l(phpversion(), 'admin/logs/status/php') : phpversion(),
   *  );
   *  if (version_compare(phpversion(), DRUPAL_MINIMUM_PHP) < 0) {
   *    $requirements['php']['description'] = $t('Your PHP installation is too old. Drupal requires at least PHP %version.', array('%version' => DRUPAL_MINIMUM_PHP));
   *    $requirements['php']['severity'] = REQUIREMENT_ERROR;
   *  }
   *
   *  // Report cron status
   *  if ($phase == 'runtime') {
   *    $cron_last = variable_get('cron_last');
   *
   *    if (is_numeric($cron_last)) {
   *      $requirements['cron']['value'] = $t('Last run !time ago', array('!time' => format_interval(REQUEST_TIME - $cron_last)));
   *    }
   *    else {
   *      $requirements['cron'] = array(
   *        'description' => $t('Cron has not run. It appears cron jobs have not been setup on your system. Check the help pages for <a href="@url">configuring cron jobs</a>.', array('@url' => 'http://drupal.org/cron')),
   *        'severity' => REQUIREMENT_ERROR,
   *        'value' => $t('Never run'),
   *      );
   *    }
   *
   *    $requirements['cron']['description'] .= ' ' . t('You can <a href="@cron">run cron manually</a>.', array('@cron' => url('admin/logs/status/run-cron')));
   *
   *    $requirements['cron']['title'] = $t('Cron maintenance tasks');
   *  }
   */

  if ($phase == 'runtime') {
    if (!module_exists('cvm_field')) {
      if (!module_enable(array('cvm_field'))) {
        $requirements['cvm_field'] = array(
         'title' => $t('CVM Field Module Missing'),
         'value' => 'Please find and enable the cvm_field module',
         'severity' => REQUIREMENT_ERROR
       );
      }
    }
  }


  return $requirements;
}
